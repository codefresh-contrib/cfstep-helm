version: '1.0'

steps:
  define_the_versions_list:
    image: alpine
    commands:
      - |-
        cat <<EOF > helmVersionsList
        3.0.1
    when:
      condition:
        all:
          notRecursivelyInvoked: 'includes("${{HELM_VERSION}}", "${{") == true'

  run-cli-loop:
    image: codefresh/cli
    commands:
      - for VAR in $(cat helmVersionsList); do codefresh wait $(codefresh run ${{CF_PIPELINE_NAME}} -d --branch ${{CF_BRANCH}} --variable HELM_VERSION=${VAR} --trigger ${{CF_PIPELINE_TRIGGER_ID}} --context github && sleep 10) & done
      - for j in $(jobs -p); do wait $j || (echo "Failed to build one of the images" && ! break); done
    when:
      condition:
        all:
          notRecursivelyInvoked: 'includes("${{HELM_VERSION}}", "${{") == true'

  debug:
    type: freestyle
    image: alpine
    commands:
      - echo $HELM_VERSION
      - env | grep CF_
    when:
      condition:
        all:
          recursivelyInvoked: 'includes("${{HELM_VERSION}}", "${{") == false'

  clone:
    type: git-clone
    arguments:
      repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
      git: github
      revision: '${{CF_REVISION}}'
    when:
      condition:
        all:
          recursivelyInvoked: 'includes("${{HELM_VERSION}}", "${{") == false'

  build_image:
    type: build
    registry: dockerhub
    working_directory: '${{clone}}'
    image_name: '${{STEP_IMAGE}}'
    tag: '${{HELM_VERSION}}-${{CF_SHORT_REVISION}}'
    build_arguments:
      - 'HELM_VERSION=${{HELM_VERSION}}'
      - 'S3_PLUGIN_VERSION=0.9.2'
      - 'GCS_PLUGIN_VERSION=0.3.0'
      - 'PUSH_PLUGIN_VERSION=0.8.1'
    when:
      condition:
        all:
          recursivelyInvoked: 'includes("${{HELM_VERSION}}", "${{") == false'

  push:
    type: push
    tag: ${{HELM_VERSION}}
    candidate: ${{build_image}}
    when:
      condition:
        all:
          recursivelyInvoked: 'includes("${{HELM_VERSION}}", "${{") == false'
          masterBranch: 'match("${{CF_BRANCH}}", "^master", true) == true'
    scale:
      PushToDockerHub:
        registry: dockerhub
      PushToQuay:
        image_name: "codefreshplugins/cfstep-helm"
        tag: ${{HELM_VERSION}}
        candidate: ${{build_image}}
        registry: quay

